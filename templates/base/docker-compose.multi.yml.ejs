version: '3.8'

services:
  app:
    container_name: <%= projectName %>-app
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - DATABASE_URL=${DATABASE_URL}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATABASE=${DB_DATABASE}
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      - postgres
      - mysql
      - mongodb
    networks:
      - nestkick-network
    restart: unless-stopped

  postgres:
    container_name: <%= projectName %>-postgres
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=<%= projectName %>_postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - nestkick-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d <%= projectName %>_postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  mysql:
    container_name: <%= projectName %>-mysql
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_DATABASE=<%= projectName %>_mysql
      - MYSQL_USER=nestkick
      - MYSQL_PASSWORD=nestkick123
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - nestkick-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-ppassword"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: --default-authentication-plugin=mysql_native_password

  mongodb:
    container_name: <%= projectName %>-mongodb
    image: mongo:7.0
    environment:
      - MONGO_INITDB_DATABASE=<%= projectName %>_mongo
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - nestkick-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    container_name: <%= projectName %>-redis
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - nestkick-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  mysql_data:
  mongodb_data:
  redis_data:

networks:
  nestkick-network:
    driver: bridge 