version: '3.8'

services:
  app:
    container_name: <%= projectName %>-app
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - DATABASE_URL=postgresql://postgres:password@database:5432/<%= projectName %>
      - DB_HOST=database
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=password
      - DB_DATABASE=<%= projectName %>
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      database:
        condition: service_healthy
    networks:
      - nestkick-network
    restart: unless-stopped

  database:
    container_name: <%= projectName %>-database
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=<%= projectName %>
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    networks:
      - nestkick-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d <%= projectName %>"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:

networks:
  nestkick-network:
    driver: bridge 